openapi: 3.0.3
info:
  title: Agora API
  description: Human-only social platform API
  version: 1.0.0
  contact:
    name: Agora Team
    email: api@agora.app

servers:
  - url: https://api.agora.app/v1
    description: Production server
  - url: https://staging-api.agora.app/v1
    description: Staging server

paths:
  /auth/swa/begin:
    post:
      summary: Begin Sign in with Apple flow
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SWABeginRequest'
      responses:
        '200':
          description: Apple authentication URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SWABeginResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/swa/finish:
    post:
      summary: Complete Sign in with Apple flow
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SWAFinishRequest'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/profile:
    post:
      summary: Create user profile after authentication
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '201':
          description: Profile created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Handle already taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/check-handle:
    get:
      summary: Check if handle is available
      tags: [Users]
      parameters:
        - name: handle
          in: query
          description: Handle to check (lowercase)
          required: true
          schema:
            type: string
            pattern: '^[a-z0-9_]{3,15}$'
      responses:
        '200':
          description: Handle availability status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckHandleResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /users/me:
    get:
      summary: Get current user profile
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Profile not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

    patch:
      summary: Update current user profile
      tags: [Users]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /feed/for-you:
    get:
      summary: Get For You feed
      tags: [Feed]
      security:
        - bearerAuth: []
      parameters:
        - name: cursor
          in: query
          description: Pagination cursor
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Number of posts to return
          required: false
          schema:
            type: integer
            default: 20
            maximum: 50
      responses:
        '200':
          description: Feed posts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SWABeginRequest:
      type: object
      required:
        - nonce
      properties:
        nonce:
          type: string
          description: Random nonce for security

    SWABeginResponse:
      type: object
      required:
        - authUrl
      properties:
        authUrl:
          type: string
          format: uri
          description: Apple authentication URL

    SWAFinishRequest:
      type: object
      required:
        - identityToken
        - authorizationCode
      properties:
        identityToken:
          type: string
          description: Apple identity token
        authorizationCode:
          type: string
          description: Apple authorization code

    AuthResponse:
      type: object
      required:
        - accessToken
        - refreshToken
        - user
      properties:
        accessToken:
          type: string
          description: JWT access token
        refreshToken:
          type: string
          description: JWT refresh token
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      required:
        - id
        - handle
        - displayHandle
        - displayName
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        handle:
          type: string
          pattern: '^[a-z0-9_]{3,15}$'
          description: Canonical lowercase handle for uniqueness
        displayHandle:
          type: string
          description: User's preferred capitalization of handle
        displayName:
          type: string
        bio:
          type: string
        avatarUrl:
          type: string
          format: uri
        createdAt:
          type: string
          format: date-time

    CreateProfileRequest:
      type: object
      required:
        - handle
        - displayHandle
        - displayName
      properties:
        handle:
          type: string
          pattern: '^[a-z0-9_]{3,15}$'
          description: Canonical lowercase handle (3-15 chars, alphanumeric + underscore)
        displayHandle:
          type: string
          minLength: 3
          maxLength: 15
          description: User's preferred capitalization (e.g., "RockyEvans")
        displayName:
          type: string
          minLength: 1
          maxLength: 50
          description: Display name shown in profile

    UpdateProfileRequest:
      type: object
      properties:
        displayHandle:
          type: string
          minLength: 3
          maxLength: 15
          description: User's preferred capitalization of handle
        displayName:
          type: string
          minLength: 1
          maxLength: 50
        bio:
          type: string
          maxLength: 160
        avatarUrl:
          type: string
          format: uri

    CheckHandleResponse:
      type: object
      required:
        - available
      properties:
        available:
          type: boolean
          description: Whether the handle is available
        suggestions:
          type: array
          items:
            type: string
          description: Suggested alternative handles if unavailable

    Post:
      type: object
      required:
        - id
        - authorId
        - text
        - createdAt
      properties:
        id:
          type: string
        authorId:
          type: string
          format: uuid
        text:
          type: string
          maxLength: 70
        linkUrl:
          type: string
          format: uri
        mediaBundleId:
          type: string
        replyToPostId:
          type: string
        quotePostId:
          type: string
        likeCount:
          type: integer
          minimum: 0
        repostCount:
          type: integer
          minimum: 0
        replyCount:
          type: integer
          minimum: 0
        visibility:
          type: string
          enum: [public, followers, private]
        createdAt:
          type: string
          format: date-time

    FeedResponse:
      type: object
      required:
        - posts
        - nextCursor
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        nextCursor:
          type: string
          nullable: true

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
